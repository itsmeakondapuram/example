Ashok Kondapuram
Cloud Engineer
Email: 
Phone: +1 5199926780

PROFESSIONAL SUMMARY
Around 5 years of professional experience in implementing DevOps practices such as Continuous Integration (CI), and Continuous Deployment (CD) in runtime with tools like GIT, CI/CD, Ansible, Chef, and Kubernetes as Orchestration tool for managing containerized applications, deployed applications in Azure, AWS, Cloud platforms and implemented IaaS using Terraform, Cloud Formation and on-premises virtualization using VMware, Cloud Foundry.

•	Expertise in Microsoft Azure IAAS, SAAS, and PAAS such as Azure storage, Azure active directory, Azure resource management, Azure VM, Blob Storage, SQL Database, Azure Data Factory, Cloud Services, Resource Groups, Express Route, Traffic Manager, VPN, Load Balancing, Application Gateways, Auto-Scaling, deploying Web Apps, Azure Application Insights.
•	Hands-on experience Designing, planning and implementation for existing on-premises applications to Azure Cloud (ARM), Configuring and deploying Azure Automation Scripts utilizing Azure stack (Compute, Web and Mobile, Blobs, ADF, Resource Groups, Azure Data Lake, HDInsight Clusters, Azure Data Factory, Azure SQL, Cloud Services and ARM), Services and Utilities focusing on Automation.  
•	Excellent knowledge in Azure compute services, Azure WebApps, Azure Functions, Azure Data Factory, Azure Media, Azure Networking, Azure Hybrid Integration, Azure Identity and Access Management.
•	Well versed in various Azure services like Compute (Web Roles, Worker Roles), Azure Active Directory, Azure Web sites, SQL, NoSQL, Network services, API Management, Caching, Scheduling, Auto Scaling, and PowerShell Automation.  
•	Extensive experience in Server infrastructure development on AWS Cloud by using AWS services like AWS EC2, AWS EBS, AWS ELB, AWS Lambda, AWS S3, RDS, AWS Glacier, AWS DynamoDB, VPC, Route53, AWS CloudWatch, CloudFormation, IAM, Certificate Manager, SNS and Auto Scaling in a scalable production environment.
•	Deploy and monitor scalable infrastructure on AWS and configuration management instances and Managed servers on AWS platform using Chef configuration management tools and Created instances in AWS as well as migrated data to AWS from data Center.
•	Designed roles and groups for users and resources using AWS Identity Access Management (IAM). Integrated AWS DynamoDB using AWS Lambda to store the values items and backup the DynamoDB streams.
•	Worked on AWS Lambda functions in Python for AWS’s Lambda which invokes python scripts to perform various transformations and analytics on large data sets in EMR Clusters 
•	Experience to deploy scale, load balance and manage Docker containers with multiple name spaced versions and good understanding of OpenShift Platform in managing Docker Containers and Kubernetes Clusters
•	Hands on experience in Automating, Configuring, and deploying instances on AWS Cloud environments and Data centers also involved in High Availability and secure multi-AWS cloud infrastructure using Ansible with AWS CloudFormation and Jenkins for continuous integration.
•	Expertise in setting up Kubernetes (k8s) clusters for running microservices and pushed microservices into production with Kubernetes backed Infrastructure. 
•	Experience in building and deploying the application code using Kubernetes CLI called kubectl, kubelet, kubeadm, kubespray and schedule the jobs using Kube scheduler. Managed K8s charts using Helm and created reproducible builds of the Kubernetes applications.
•	Written automation scripts for creating resources in OpenStack Cloud using Python and terraform modules
•	Experienced in Kubernetes using Helm charts and created reproducible builds of the Kubernetes applications, managed Kubernetes manifest files and managed releases of Helm packages.  
•	Expertise with Docker images using a Docker file, worked on container snapshots, removing images, and managing Docker volumes. Orchestration of Docker images and Containers using Kubernetes by creating master and node.
•	Hands-on expertise on Terraform modules that had version conflicts to utilize Cloud formation templates during deployments, worked with Terraform to create stacks in AWS and Azure cloud services, and updated the Terraform scripts based on the requirement on regular basis.  
•	Good knowledge in designing a Terraform and deploying it in cloud deployment manager to spin up resources like cloud virtual networks, Compute Engines in public and private subnets along with Auto-Scaler.
•	Experienced with Terraform key features such as Infrastructure as code, Execution plans, Resource Graphs, Change Automation. Collaborate in the automation of AWS infrastructure via Terraform and Jenkins-services.
•	Experienced in using Ansible as a configuration management tool and developed Ansible Playbooks to provision Apache Web servers, Tomcat servers, Nginx, and other applications.   
•	Capable of doing Ansible setup, managing hosts file, Using YAML linter, authoring various playbooks and custom modules with Ansible.
•	Experience in writing Jenkins Pipeline jobs using Groovy Scripts for Continuous Integration and built workflows, also used Jenkins for uploading Artifacts into Nexus Repository and automated various day-to-day administration task by developing Bash, Ruby, PowerShell, and Python Scripts.
•	Experience in integrating and implementing CI/CD automation using Jenkins with various tools like Maven (Build tool), GIT(Repository), SonarQube (static Code analysis), Nexus (Artifact repository).
•	Developed Maven and gradle build scripts, utilized Maven dependency management to deploy snapshot and release artifacts to Nexus Artifactory/JFrog Artifactory.  
Experience in working on version control systems like Subversion and GIT Stash used Source code management client tools like Visual SVN, Tortoise SVN, Stash, Source Tree, GIT Bash, GitHub, GIT GUI and other command  
•	Experience in JIRA to capture, organize and prioritize issues and made use of it in the agile environment refactoring existing components & widgets to keep sync with the emerging new trends of AEM.
•	 Configuration and Administration expertise in Nexus Repository Manager and Jfrog Artifactory.
•	Experienced in real-time monitoring and alerting of applications deployed in Cloud using Nagios, ELK stack and Splunk. Also experienced in configuring Nagios for continuous monitoring of applications in the production environment and enabling notification by emails. 
•	 Experience in setting up and managing ELK (Elastic Search, Log Stash & Kibana) Stack to collect, search and analyze logfiles across servers, log monitoring and created geo-mapping visualizations using Kibana.
•	Expertise on installing, configuring, upgrading, and troubleshooting in Red Hat Enterprise Linux (RHEL) 5/6/7,
CentOS 5/6/7, Debian, Ubuntu 12/13/14, Solaris, Mac OS x, Windows. 
TECHNICAL SKILLS SUMMARY:

Operating system	Linux (Red Hat 4/5/6/7), Ubuntu 14/16/18, Windows NT 2000/2003, CentOS 6,7
Application Servers	Oracle Web Logic (8/9/10), IBM Web Sphere (5/6/7), JBOSS
Automation Tools	Jenkins, Jfrog, Nexus, Docker, Kubernetes, Ansible, chef-solo, habitat, compliance, Kitchen, chef-solo, Habitat, compliance, Vagrant, Terraform, Cloud Foundry
Version control tools	GIT, GITHUB, SVN, BitBucket, GitLab, CodeCommit
Web servers	Apache HTTP 2.x ,3.x, Nginx, IIS, Apache Tomcat
Networking/protocol	DNS, DHCP, CISCO ASA Firewalls Routers/Switches, WAN, TCP/IP, NIS, NFS, SMTP, LAN, FTP
Scripting	Perl, Python, Ruby, Bash shell, Power shell scripting, Groovy, PHP, Hashicorp, JSON
Virtualization Technologies	VMWare ESX/ESXi, Windows Hyper-V, Power VM, Virtual box, Citrix Xen
Cloud Environments	Open stack, AWS, Azure, GCP
Volume manager	VERITAS volume manager, LVM with Linux, Solaris Volume Manager
Database	AWS RDS, Aurora, DynamoDB, MongoDB, MySQL, MS SQL SERVER 2008/12
Monitoring Tools	Nagios XI, Wavefront, AppDynamics, Splunk, SolarWinds, Cloud Watch, ELK, NewRelic

EDUCATION:
•	Bachelor of Technology, Osmania University, Hyderabad , India.

WORK EXPERIENCE:
 
Master Card, Toronto, Ontario                                                                             Sep 2022 to Present
Azure DevOps Engineer / Azure Cloud Engineer
•	Built and Installed servers through Azure Resource Manager (ARM) Templates or Azure Portal. Migrating On-premises virtual machines to Azure Resource Manager (ARM) Subscription with Azure Site Recovery.  
•	Utilized ARM template to build high-availability SQL for application backend infrastructure and virtual machine front-end scale sets, with multiple servers for other dedicated functions, including reporting, scripting, and scheduling.  
•	Performed configuration of Azure WebApps, App services, Application insights, Azure DNS, Azure Network Watcher and implementing Azure site recovery, Azure stack, Backup and Automation.  
•	Created Azure Automation Assets, Graphical runbooks, PowerShell runbooks that will automate specific tasks. Expertise in deploying Azure AD Connect, configuring ADFS authentication flow, ADFS installation using Azure AD Connect.  
•	Automated a portfolio of scripts using Azure automation tool. Created ad hoc scripts to add a virtual machine using Desired State configuration tool. Provided real time predictions by using Azure Stream Analytics and used Azure IOT Hub for Monitoring Assets and Telemetry Ingestion. 
•	Deployed Azure IaaS virtual machines (VMs) and Cloud services (PaaS role instances) into secure VNets and subnets. Configured Azure Traffic Manager to build routing for user traffic Infrastructure Migrations: Drive Operational efforts to migrate all legacy services to a fully Virtualized Infrastructure.  
•	Used Azure Kubernetes Service to deploy a managed Kubernetes cluster in Azure portal, with the Azure CLI, also used template driven deployment options such as Resource Manager templates and terraform.   
•	Extensively worked on Kubernetes for scheduling, deploying, and managing pods, replication controllers, deployments, labels, health checks and ingress by writing YAML files onto a node cluster using Helm Charts. 
•	Configured Kubernetes Services type load balancer and Cluster IP to expose UI based application and migrated cluster CNI from Flannel to Kube-router to support Kubernetes network policies. 
•	Deployed and configured Prometheus to monitor Kubernetes nodes with node-exporter, monitor Kubernetes API and resources with Kube-state-metrics.  
•	 Created the Kubernetes Clusters under Pod networks to group the Docker containers. Used Kubernetes and Docker to maintain the runtime environment for the CI/CD system to build, test and deploy the applications across different environments. 
•	Worked with Terraform Templates to automate the Azure IaaS virtual machines using terraform modules and deployed virtual machine scale sets in various environments.
•	Created a green field implementation of Terraform Enterprise and translated environments into Infrastructure as code in Azure and deployed them for use.  
•	Used Docker for setting Azure Container Registry with Docker and Docker-compose, actively involved in deployments on Docker using Kubernetes. Also responsible for development of Test environment on Docker containers and configuring them using Kubernetes.
•	Developed Networking policies for Docker containers. Worked on open-source development tools Docker Mesos, and Kubernetes to build and maintain Docker containers and Kubernetes clusters.  
•	Worked on Ansible for configuration management and infrastructure automation. Also created dynamic inventory in Ansible for automating continuous deployment and wrote playbooks using YAML scripting. 
•	Used Ansible and Ansible Tower as Configuration management tool, to automate repetitive tasks, quickly deploys critical applications, and proactively manages change.
•	Used Ansible Tower, which provides an easy-to- use dashboard and role-based access control, so that it is easier to allow individual teams access to use Ansible for their deployments.    
•	Experience in managing Ansible Playbooks, roles, and modules. Designed Rapid Application Deployment (RAD) methods using Ansible to automatically deploy servers as needed and done custom development by taking playbooks from Ansible Galaxy.
•	Integrated Ansible with Jenkins to provide automation, continuous integration & Continuous Deployment through Jenkins. Implemented Jenkins workflow and plugins for repeatable deployments of multi-tier applications, artifacts, and services to Docker.
•	Built end to end CI/CD Pipelines in Jenkins to retrieve code, compile applications and created job chains with Jenkins Job Builder, Parameterized Triggers, and target host deployments.
•	Implemented Jenkins as a full cycle continuous delivery tool involving package creation, distribution and deployment onto tomcat application servers via shell scripts embedded into Jenkins jobs.  
•	Worked on the DNS & Akamai setup for browsing the Sites on Internal Server and worked on the AZURE Event Hubs and Splunk Index for Monitoring Logs for Tenant Specific.  
•	Worked on NEXUS to upload/download the build artifacts & Responsible for Administering NEXUS Server which includes install, upgrade, maintenance of repositories, performance tuning, troubleshooting issues and maintenance.  
•	Created branching & tagging strategy to maintain the source code in the GIT repository and coordinated with developers with establishing and applying appropriate branching, labeling/naming conventions using GIT source control.  
•	Automated Continuous Integration & Continuous Deployments of Applications into the Web Apps through the PowerShell scripts and their associated Build & Release definitions with the Triggers.  
•	Wrote numerous scripts in Python to perform various tasks such as the importing of data into MySQL and replacing proprietary compiled Python code with easy to read, modifiable, custom code to accomplish the similar tasks and more.
•	JIRA has been used as a bug tracking tool and created, maintained, and customized complex JIRA project configurations including workflows, custom fields, permissions and notifications & managed all the bugs and changes into a production environment using the JIRA tracking tool.

Environment: AZURE, Kubernetes, Docker, Jenkins, Ansible, Terraform, Python, GIT, Shell Scripting, JIRA, Tomcat Application Servers, YAML Scripting, VM, IOT, Subnets, PowerShell Scripting

Rogers, Toronto, Ontario                                                                                                  Sep 2021 – Sep  2022 
Cloud Infrastructure Engineer / DevOps Engineer
•	Extensive experience in Windows AZURE (IaaS) migrating like creating AZURE VMs, storage accounts, VHDs, storage pools, migrating on premise servers to AZURE and creating availability sets in AZURE.
•	Performed Configuration of Azure Web Apps, App services, Application insights, Azure DNS, Azure Network Watcher and Implementing Azure site recovery, Azure stack, Backup and Automation.
•	Managed Azure Infrastructure, Azure web roles, Worker roles, VM Role, Azure SQL, Azure Storage, Azure AD Licenses, Virtual Machine Backup and Recover from a Recovery services vault using Azure PowerShell and Azure portal.
•	Worked on Azure Site Recovery and Azure Backup - Deployed Instances on Azure environments and in Data centers and migrating to Azure using Azure Site Recovery and collecting data from all Azure Resources using Log Analytics and analyzed the data to resolve issues.
•	Implemented various resources in Azure using Azure portal, PowerShell on Azure Resources Manager deployment models. Experienced in deploying infrastructure as code applications using ARM Templates (JSON).
•	Supported AWS Cloud environment with 200+ AWS instances and configured Elastic IP & Elastic Storage and experience working on implemented security groups and Network ACLs.
•	Created S3 buckets and managing policies for S3 buckets and Utilized S3 bucket for storage and backup on AWS. Extensive knowledge in migrating applications from internal data center to AWS.
•	Deployed applications into the AWS cloud using Amazon EC2, VPC (Virtual Private Cloud), IAM (Identity and Access Management), AWS S3, Glacier, Cloud Watch, Cloud Trail, and Route 53.
•	Involved in designing and deploying multi - tier applications utilizing all the AWS services like (EC2, Route53, S3, RDS, Dynamo DB, SNS, SQS, IAM) focusing on high-availability, fault tolerance, and auto-scaling in AWS Cloud formation.
•	Installing   and    administrating    monitoring    tool (Nagios)   and    managed    with    administered    like JIRA/Confluence/Jive add-ons, plugins, and extensions.
•	Experience in designing and maintaining dashboards using Nagios Enterprise monitoring tool which is used for Resource Monitoring/Network Monitoring/Log Trace Monitoring.
•	Used Azure Kubernetes Service to deploy a managed Kubernetes cluster in Azure and created an AKS cluster in the Azure portal, with the Azure CLI, also used template driven deployment options such as Resource Manager templates and terraform.
•	Managed Kubernetes charts using Helm, and created reproducible builds of the Kubernetes applications,
managed Kubernetes manifest files and managed releases of Helm packages.
•	Used Kubernetes to manage containerized applications using its nodes, Config-Maps, selector, Services, and deployed application containers as Pods.
•	Extensively worked with Scheduling, deploying, managing container replicas onto a node cluster using Kubernetes and experienced in creating Kubernetes clusters work with frameworks running on the same cluster resources.
•	Installed Docker Registry for local upload and download of Docker images and from Docker Hub and created Docker files to automate the process of capturing and using the images.
•	Developed Networking policies for Docker Containers. Worked on open-source development tools like Docker Containers, Mesos clusters.
•	Implemented the Docker for wrapping up the final code and setting up development and testing environment using Docker Hub, and Docker Container Network.
•	Expertise in writing Ansible scripts to automate system administration activities and processes on managed hosts, standardized execution of tasks using Ansible playbooks, managed Ansible playbooks centrally and implemented recurring execution using Ansible Tower web interface.
•	Created and used Ansible templates to create customized configuration files for hosts and used Ansible Vault in Ansible playbooks to protect sensitive data.
•	Installed and Implemented Ansible configuration management system. Used Ansible to manage Web applications, Environments configuration Files, Users, Mount points and Packages.
•	Maintained high availability clustered and standalone server environments and refined automation components with scripting and configuration management (Ansible) and experienced in writing Ansible scripts.
•	Involved in using Terraform and Ansible, migrate legacy and monolithic systems to Azure and managing
Ubuntu and RHEL virtual servers on Azure by creating Ansible Nodes.
•	Responsible for installation & configuration of Jenkins to support various Java builds and Jenkins plugins to automate continuous builds and publishing DOCKER images to the Nexus repository.
•	Created Jenkins CI/CD pipelines for continuous build & deployment and integrated Junit and SonarQube plugins in Jenkins for automated testing and for Code quality check.
•	Extensively worked on Continuous Integration (CI) and Continuous Deployment (CD) process by automating build on time basis using Jenkins. Designed the project workflows/pipelines using Jenkins for Continuous Integration and deployment into different Web/Application Server.
•	Worked with python design code for manufacturing quality, monitoring, logging, and debugging code optimization.
•	Wrote a python module to connect and view the status of an Apache Cassandra instance and developed tools using python, shell scripting, XML to automate some of the menial tasks.
•	Created release branches in GIT-by-GIT Administration including branching, reporting and assisting with project and end user support.
•	Created branching & tagging strategy to maintain the source code in the GIT repository and coordinated with developers with establishing and applying appropriate branching, labelling/naming conventions using  GIT source control.

Environment: AZURE, AWS, VMs, SQL, Splunk, Kubernetes, Docker, Ansible, Playbooks, Nexus, Jenkins, Shell scripting, Jira, Terraform, S3 bucket, GIT, Nagios Python, Jenkins server.

Bank Of Maharashtra, India                                                                                    April 2018 to Sep 2021                           
Cloud DevOps Engineer / AWS Cloud Engineer
•	Worked heavily with AWS and its infrastructure, including EC2, AMI, ECS, Elastic Cache, Elasticsearch, RDS, VPC implementation, IAM, KMS, WAF, CloudTrail, CloudWatch, S3, CloudFront, AWS CLI scripting, ELB, Route 53, Lambda, DynamoDB, Elastic Beanstalk, SQS, SNS and Security group management.
•	Supported AWS Cloud environment with 200+ AWS instances and configured Elastic IP & Elastic Storage and experience working on implemented security groups and Network ACLs.
•	Created S3 buckets and managing policies for S3 buckets and Utilized S3 bucket for storage and backup on AWS. Extensive knowledge in migrating applications from internal data center to AWS.
•	Deployed applications into the AWS cloud using Amazon EC2, VPC (Virtual Private Cloud), IAM (Identity and Access Management), AWS S3, Glacier, Cloud Watch, Cloud Trail and Route 53.
•	Involved in designing and deploying multi - tier applications utilizing all the AWS services like (EC2, Route53, S3, RDS, Dynamo DB, SNS, SQS, IAM) focusing on high-availability, fault tolerance, and auto-scaling in AWS Cloud formation.
•	Defined AWS Security Groups, which acted as virtual firewalls that controlled the traffic allowed to reach one or more AWS EC2 instances. Worked on Multiple AWS instances, set the security groups, Elastic Load Balancer and AMIs, auto scaling to design cost effective, fault tolerant and highly available systems.
•	Designed and converted existing AWS infrastructure to 'Server-less' architecture deployed via Terraform which includes AWS Elastic Beanstalk for app deployments and worked on AWS Lambda with Amazon Kinesis and integrated Dynamo DB using Lambda for value storage and for streams backup.
•	Experience with container-based deployments using Docker, working with Docker files, Docker images, Docker Hub, Docker Compose and Docker registries and Kubernetes.
•	Experience working on several Docker components like Docker Engine, Hub, Machine, Compose and Docker Registry.
•	Experience in setting up the automated build on Docker HUB, and also managed Docker orchestration using Docker Swarm.
•	Created Terraform scripts to launch the platform common services like CI/CD tool JENKINS, Configuration Management Tool Chef, Secrets management tool Vault. 
•	Written Terraform templates, Chef cookbooks pushed them onto Chef for configuring EC2 Instance. Solved Gateway time issue on ELB and moved all the logs to S3 Bucket by using Terraform.
•	Involved heavily in setting up the CI/CD pipeline using GitHub, Jenkins, Maven, Nexus, Chef and Installed and configured Chef Servers and bootstrapped chef client nodes for creating data bags and managed Chef Cookbooks to automate system operations. 
•	Installed Chef-Server enterprise On-Premises/WorkStation, bootstrapped the Nodes using Knife and worked with Chef Enterprise Hosted and Written Cookbooks and uploaded them to Chef-Server & managed on-site applications/services. 
•	Worked with Chef Environment, Installing Workstation, Bootstrapping Nodes, setting up Chef Server, bundling recipes into cookbooks and uploading them to Chef-server.
•	Written Chef Cookbooks for various DB configurations to modularize and optimize end product configuration, converting production support scripts to Chef Recipes and AWS server provisioning using Chef Recipes.
•	Installed and configured Nexus Firewall to block unwanted components from entering the CI/CD pipeline.
•	Expertise in Working with Jenkins using numerous Plugins and Automated Build processes. Used Jenkins AWS CodeDeploy plugin to deploy.
•	Creation of Python scripts for data access and analysis to aid in process and system monitoring. Designed and developed automation test scripts using Python Boto3. Worked on Python scripts to parse JSON documents and load the data in database.
•	Used GIT as source code management tool creating local repository, cloning the repository, adding, committing, pushing the changes in the local repositories, saving changes for later (Stash), recovering files, branching, creating tags, viewing logs, pulling latest commits, etc.
•	Experienced in ELK architecture and its components like Elastic search, Log stash and Kibana. Working with ELK (Elastic Search, Log stash and Kibana) stack to develop an end-to-end transaction processing system.
•	Configuring and managing an ELK stack, setup the Elastic search ELK Stack to collect, search and analyze log files across the servers and created optimized indexes and derived analytics on Elasticsearch data.
•	Served the ELK stack community with use cases and Logstash plugin and Deployed applications using Jenkins server and Troubleshoot build & release job failures, resolve, work with developers on resolution.

Environment: AWS, Terraform, Chef, Docker, Jenkins, Git, Jira, Jenkins, Kubernetes, Maven, ELK,  Shell, Bash, Python, DynamoDB, Cassandra, Tomcat, Nginx, Linux, VMware.


   

